-- Made by Brudda
-- discord.gg/3NqYkMFH2C
-- github.com/bruddaa/

local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==2) then function v33()local v43=v9(v27,v30,v30);v30=v30 + 1 ;return v43;end v34=nil;function v34()local v44,v45=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v45 * 256) + v44 ;end v29=3;end if (v29==5) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\194\123","\116\236\85\92\81\105\219"),function(v46)if (v9(v46,2)==79) then local v102=0;while true do if (v102==0) then v31=v8(v11(v46,1,1));return "";end end else local v103=v10(v8(v46,16));if v31 then local v110=0;local v111;while true do if (v110==0) then v111=v13(v103,v31);v31=nil;v110=1;end if (v110==1) then return v111;end end else return v103;end end end);v29=1;end if (v29==6) then v40=nil;function v40()local v47={};local v48={};local v49={};local v50={v47,v48,nil,v49};local v51=v35();local v52={};for v77=1,v51 do local v78=v33();local v79;if (v78==1) then v79=v33()~=0 ;elseif (v78==2) then v79=v36();elseif (v78==3) then v79=v37();end v52[v77]=v79;end v50[1 + 2 ]=v33();for v81=1,v35() do local v82=0;local v83;while true do if (v82==0) then v83=v33();if (v32(v83,1,1)==(877 -(282 + 595))) then local v117=v32(v83,2,3);local v118=v32(v83,4,6);local v119={v34(),v34(),nil,nil};if (v117==0) then v119[3]=v34();v119[4]=v34();elseif (v117==1) then v119[3]=v35();elseif (v117==2) then v119[3]=v35() -(2^16) ;elseif (v117==(3 -0)) then local v131=0;while true do if (v131==0) then v119[3]=v35() -(2^16) ;v119[4]=v34();break;end end end if (v32(v118,1,1)==1) then v119[2]=v52[v119[1067 -(68 + 997) ]];end if (v32(v118,2,1272 -(226 + 1044) )==1) then v119[3]=v52[v119[12 -9 ]];end if (v32(v118,3,3)==1) then v119[4]=v52[v119[4]];end v47[v81]=v119;end break;end end end for v84=118 -(32 + 85) ,v35() do v48[v84-(1 + 0) ]=v40();end return v50;end v41=nil;v29=7;end if (1==v29) then v32=nil;function v32(v54,v55,v56)if v56 then local v104=(v54/(2^(v55-1)))%(2^(((v56-(2 -1)) -(v55-(2 -1))) + 1)) ;return v104-(v104%(1 -0)) ;else local v105=0;local v106;while true do if (0==v105) then v106=2^(v55-1) ;return (((v54%(v106 + v106))>=v106) and 1) or 0 ;end end end end v33=nil;v29=2;end if (3==v29) then v35=nil;function v35()local v57=0;local v58;local v59;local v60;local v61;while true do if (v57==1) then return (v61 * (16777835 -(555 + 64))) + (v60 * (66467 -(857 + 74))) + (v59 * 256) + v58 ;end if (v57==0) then v58,v59,v60,v61=v9(v27,v30,v30 + 3 );v30=v30 + (10 -6) ;v57=1;end end end v36=nil;v29=4;end if (v29==4) then function v36()local v62=v35();local v63=v35();local v64=1;local v65=(v32(v63,1,20) * ((570 -(367 + 201))^32)) + v62 ;local v66=v32(v63,21,31);local v67=((v32(v63,32)==1) and  -1) or 1 ;if (v66==(927 -(214 + 713))) then if (v65==0) then return v67 * 0 ;else local v112=0;while true do if (v112==0) then v66=1;v64=0;break;end end end elseif (v66==2047) then return ((v65==0) and (v67 * ((1 + 0)/0))) or (v67 * NaN) ;end return v16(v67,v66-1023 ) * (v64 + (v65/(2^52))) ;end v37=nil;function v37(v68)local v69;if  not v68 then v68=v35();if (v68==0) then return "";end end v69=v11(v27,v30,(v30 + v68) -1 );v30=v30 + v68 ;local v70={};for v86=1, #v69 do v70[v86]=v10(v9(v11(v69,v86,v86)));end return v14(v70);end v29=5;end if (v29==7) then function v41(v71,v72,v73)local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...)local v88=v74;local v89=v75;local v90=v76;local v91=v39;local v92=1 + 0 ;local v93= -1;local v94={};local v95={...};local v96=v20("#",...) -1 ;local v97={};local v98={};for v107=0,v96 do if (v107>=v90) then v94[v107-v90 ]=v95[v107 + 1 ];else v98[v107]=v95[v107 + 1 ];end end local v99=(v96-v90) + 1 ;local v100;local v101;while true do v100=v88[v92];v101=v100[1];if (v101<=36) then if (v101<=17) then if (v101<=8) then if (v101<=(7 -4)) then if (v101<=1) then if (v101>0) then v98[v100[2]]=v41(v89[v100[3]],nil,v73);else v98[v100[2]][v98[v100[3]]]=v98[v100[4]];end elseif (v101>2) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end else local v135=0;local v136;local v137;local v138;local v139;while true do if (v135==2) then for v321=v136,v93 do v139=v139 + 1 ;v98[v321]=v137[v139];end break;end if (v135==1) then v93=(v138 + v136) -1 ;v139=0;v135=2;end if (v135==0) then v136=v100[2];v137,v138=v91(v98[v136](v21(v98,v136 + (1 -0) ,v100[3])));v135=1;end end end elseif (v101<=5) then if (v101>(7 -3)) then if v98[v100[2]] then v92=v92 + (351 -(87 + 263)) ;else v92=v100[3];end else v98[v100[2]][v98[v100[3]]]=v100[4];end elseif (v101<=6) then local v142=v100[2];v98[v142](v98[v142 + 1 ]);elseif (v101==7) then v98[v100[2]]={};else local v268=v100[2];do return v21(v98,v268,v93);end end elseif (v101<=12) then if (v101<=10) then if (v101==9) then v98[v100[2]]=v98[v100[3]];else local v145=v100[182 -(67 + 113) ];local v146=v98[v145];local v147=v98[v145 + 2 ];if (v147>(0 + 0)) then if (v146>v98[v145 + 1 ]) then v92=v100[3];else v98[v145 + 3 ]=v146;end elseif (v146<v98[v145 + 1 ]) then v92=v100[3];else v98[v145 + 3 ]=v146;end end elseif (v101>11) then do return v98[v100[2]]();end else v98[v100[2]]=v100[3];end elseif (v101<=14) then if (v101==13) then v92=v100[3];else local v151=v100[4 -2 ];v98[v151]=v98[v151]();end elseif (v101<=(12 + 3)) then v98[v100[2]]=v100[3] + v98[v100[4]] ;elseif (v101>16) then v98[v100[7 -5 ]]=v100[955 -(802 + 150) ] + v98[v100[4]] ;elseif v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=26) then if (v101<=21) then if (v101<=19) then if (v101>18) then v98[v100[2]]=v73[v100[3]];else local v156=v100[5 -3 ];do return v98[v156](v21(v98,v156 + (1 -0) ,v100[3]));end end elseif (v101==20) then local v157=v89[v100[3]];local v158;local v159={};v158=v18({},{[v7("\30\51\214\243\183\238\57","\139\65\108\191\157\211")]=function(v240,v241)local v242=v159[v241];return v242[1][v242[2]];end,[v7("\67\28\52\64\107\42\52\65\121\59","\37\28\67\90")]=function(v243,v244,v245)local v246=v159[v244];v246[1][v246[2]]=v245;end});for v248=1,v100[4] do v92=v92 + 1 ;local v249=v88[v92];if (v249[1]==9) then v159[v248-1 ]={v98,v249[3]};else v159[v248-1 ]={v72,v249[3 + 0 ]};end v97[ #v97 + 1 ]=v159;end v98[v100[2]]=v41(v157,v158,v73);else local v161=v100[2];local v162=v98[v100[1000 -(915 + 82) ]];v98[v161 + 1 ]=v162;v98[v161]=v162[v100[4]];end elseif (v101<=23) then if (v101==(62 -40)) then v98[v100[2]]=v100[3];else v98[v100[2]][v98[v100[2 + 1 ]]]=v100[4];end elseif (v101<=24) then local v170=0;local v171;local v172;local v173;local v174;while true do if (2==v170) then for v329=v171,v93 do local v330=0;while true do if (v330==0) then v174=v174 + 1 ;v98[v329]=v172[v174];break;end end end break;end if (0==v170) then v171=v100[2];v172,v173=v91(v98[v171](v21(v98,v171 + 1 ,v93)));v170=1;end if (v170==1) then v93=(v173 + v171) -1 ;v174=0;v170=2;end end elseif (v101==25) then do return;end else local v270=v100[2];v98[v270]=v98[v270](v21(v98,v270 + 1 ,v93));end elseif (v101<=31) then if (v101<=28) then if (v101==27) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else v98[v100[2]]=v72[v100[3]];end elseif (v101<=29) then v98[v100[2]]=v98[v100[3]];elseif (v101>30) then v98[v100[2]]= #v98[v100[3 -0 ]];else do return v98[v100[2]]();end end elseif (v101<=33) then if (v101>32) then v98[v100[2]]=v98[v100[3]] + v100[1191 -(1069 + 118) ] ;else for v251=v100[2],v100[3] do v98[v251]=nil;end end elseif (v101<=34) then v98[v100[2]]=v41(v89[v100[3]],nil,v73);elseif (v101==35) then local v273=v100[2];v98[v273](v21(v98,v273 + 1 ,v93));elseif  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[3];end elseif (v101<=54) then if (v101<=45) then if (v101<=40) then if (v101<=38) then if (v101>37) then v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;else v98[v100[2]]={};end elseif (v101>39) then local v184=0;local v185;local v186;local v187;local v188;while true do if (0==v184) then v185=v100[4 -2 ];v186,v187=v91(v98[v185](v21(v98,v185 + 1 ,v93)));v184=1;end if (v184==2) then for v332=v185,v93 do local v333=0;while true do if (0==v333) then v188=v188 + 1 ;v98[v332]=v186[v188];break;end end end break;end if (1==v184) then v93=(v187 + v185) -1 ;v188=0;v184=2;end end else local v189=v100[3 -1 ];do return v21(v98,v189,v93);end end elseif (v101<=42) then if (v101>(8 + 33)) then if (v98[v100[2]]==v100[4]) then v92=v92 + 1 ;else v92=v100[3];end else local v190=v100[2];local v191=v98[v190 + 2 ];local v192=v98[v190] + v191 ;v98[v190]=v192;if (v191>0) then if (v192<=v98[v190 + 1 ]) then v92=v100[3];v98[v190 + 3 ]=v192;end elseif (v192>=v98[v190 + 1 ]) then v92=v100[3];v98[v190 + 3 ]=v192;end end elseif (v101<=43) then v98[v100[2]]=v98[v100[3]][v100[4]];elseif (v101>44) then for v300=v100[3 -1 ],v100[3] do v98[v300]=nil;end else local v275=0;local v276;local v277;local v278;local v279;while true do if (v275==0) then v276=v100[2];v277,v278=v91(v98[v276](v98[v276 + 1 ]));v275=1;end if (v275==2) then for v356=v276,v93 do local v357=0;while true do if (0==v357) then v279=v279 + (792 -(368 + 423)) ;v98[v356]=v277[v279];break;end end end break;end if (v275==1) then v93=(v278 + v276) -1 ;v279=0 + 0 ;v275=2;end end end elseif (v101<=49) then if (v101<=47) then if (v101==46) then if  not v98[v100[2]] then v92=v92 + 1 ;else v92=v100[9 -6 ];end else local v196=0;local v197;while true do if (v196==0) then v197=v100[2];v98[v197](v98[v197 + 1 ]);break;end end end elseif (v101==48) then v98[v100[2]]=v98[v100[3]] + v100[4] ;else v98[v100[2]]();end elseif (v101<=51) then if (v101>50) then v98[v100[2]]=v98[v100[3]]%v100[4] ;else local v200=0;local v201;while true do if (v200==0) then v201=v100[2];v98[v201]=v98[v201]();break;end end end elseif (v101<=(70 -(10 + 8))) then v98[v100[2]]=v72[v100[3]];elseif (v101==53) then local v281=v100[2];do return v98[v281](v21(v98,v281 + 1 ,v100[11 -8 ]));end else v98[v100[2]]=v73[v100[445 -(416 + 26) ]];end elseif (v101<=(200 -137)) then if (v101<=58) then if (v101<=(25 + 31)) then if (v101==55) then local v204=0;local v205;while true do if (v204==0) then v205=v100[2];v98[v205]=v98[v205](v21(v98,v205 + (1 -0) ,v93));break;end end else local v206=v100[2];v98[v206]=v98[v206](v21(v98,v206 + 1 ,v100[3]));end elseif (v101>57) then local v208=0;local v209;local v210;while true do if (v208==0) then v209=v100[2];v210=v98[v209];v208=1;end if (v208==1) then for v338=v209 + 1 ,v93 do v15(v210,v98[v338]);end break;end end else v98[v100[2]]=v98[v100[3]]%v98[v100[4]] ;end elseif (v101<=60) then if (v101>59) then local v212=0;local v213;local v214;local v215;while true do if (v212==0) then v213=v100[2];v214=v98[v213];v212=1;end if (v212==1) then v215=v98[v213 + 2 ];if (v215>(438 -(145 + 293))) then if (v214>v98[v213 + 1 ]) then v92=v100[433 -(44 + 386) ];else v98[v213 + 3 ]=v214;end elseif (v214<v98[v213 + 1 ]) then v92=v100[3];else v98[v213 + 3 ]=v214;end break;end end else local v216=0;local v217;local v218;local v219;while true do if (1==v216) then v219=v98[v217] + v218 ;v98[v217]=v219;v216=2;end if (v216==0) then v217=v100[1488 -(998 + 488) ];v218=v98[v217 + 2 ];v216=1;end if (2==v216) then if (v218>0) then if (v219<=v98[v217 + 1 ]) then local v366=0;while true do if (0==v366) then v92=v100[3];v98[v217 + 3 ]=v219;break;end end end elseif (v219>=v98[v217 + 1 ]) then local v367=0;while true do if (v367==0) then v92=v100[3];v98[v217 + 3 ]=v219;break;end end end break;end end end elseif (v101<=61) then v98[v100[2]]();elseif (v101>62) then v98[v100[2]][v98[v100[3]]]=v98[v100[4]];else v98[v100[2]]= #v98[v100[3]];end elseif (v101<=68) then if (v101<=65) then if (v101>64) then local v220=v89[v100[1 + 2 ]];local v221;local v222={};v221=v18({},{[v7("\203\35\64\25\124\130\7","\127\148\124\41\119\24\231")]=function(v253,v254)local v255=0;local v256;while true do if (v255==0) then v256=v222[v254];return v256[1][v256[2]];end end end,[v7("\46\189\35\160\192\24\140\41\160\207","\183\113\226\77\197")]=function(v257,v258,v259)local v260=0;local v261;while true do if (0==v260) then v261=v222[v258];v261[1][v261[2]]=v259;break;end end end});for v262=1,v100[4] do v92=v92 + 1 ;local v263=v88[v92];if (v263[1]==9) then v222[v262-1 ]={v98,v263[3]};else v222[v262-1 ]={v72,v263[3]};end v97[ #v97 + 1 ]=v222;end v98[v100[2]]=v41(v220,v221,v73);else v98[v100[2]]=v98[v100[3]][v100[4]];end elseif (v101<=66) then local v226=v100[2];v98[v226](v21(v98,v226 + 1 ,v93));elseif (v101==67) then v92=v100[3];else local v288=0;local v289;local v290;while true do if (v288==0) then v289=v100[2];v290=v98[v100[3 + 0 ]];v288=1;end if (v288==1) then v98[v289 + 1 ]=v290;v98[v289]=v290[v100[4]];break;end end end elseif (v101<=70) then if (v101>69) then local v227=0;local v228;local v229;local v230;local v231;while true do if (v227==1) then v93=(v230 + v228) -(1139 -(116 + 1022)) ;v231=0;v227=2;end if (v227==0) then v228=v100[2];v229,v230=v91(v98[v228](v98[v228 + (773 -(201 + 571)) ]));v227=1;end if (2==v227) then for v342=v228,v93 do v231=v231 + 1 ;v98[v342]=v229[v231];end break;end end else local v232=0;local v233;local v234;while true do if (1==v232) then for v345=v233 + 1 ,v93 do v15(v234,v98[v345]);end break;end if (v232==0) then v233=v100[2];v234=v98[v233];v232=1;end end end elseif (v101<=71) then local v235=0;local v236;local v237;local v238;local v239;while true do if (v235==0) then v236=v100[2];v237,v238=v91(v98[v236](v21(v98,v236 + 1 ,v100[3])));v235=1;end if (v235==2) then for v346=v236,v93 do local v347=0;while true do if (v347==0) then v239=v239 + 1 ;v98[v346]=v237[v239];break;end end end break;end if (v235==1) then v93=(v238 + v236) -1 ;v239=0;v235=2;end end elseif (v101>72) then do return;end else local v291=0;local v292;while true do if (v291==0) then v292=v100[2];v98[v292]=v98[v292](v21(v98,v292 + (4 -3) ,v100[3]));break;end end end v92=v92 + 1 ;end end;end return v41(v40(),{},v28)(...);end end end vv17(),...);

-- Made by Brudda
-- discord.gg/3NqYkMFH2C
-- github.com/bruddaa/
